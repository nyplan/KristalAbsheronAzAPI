// <auto-generated />
using System;
using KristalAbsheronAzAPI.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KristalAbsheronAzAPI.Migrations
{
    [DbContext(typeof(KAContext))]
    partial class KAContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DownloadFormat", b =>
                {
                    b.Property<int>("DownloadsId")
                        .HasColumnType("integer");

                    b.Property<int>("FormatsId")
                        .HasColumnType("integer");

                    b.HasKey("DownloadsId", "FormatsId");

                    b.HasIndex("FormatsId");

                    b.ToTable("DownloadFormat");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.Ad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ads");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.CompletedProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutTheProject")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<bool>("IsPremium")
                        .HasColumnType("boolean");

                    b.Property<string>("ProjectType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("TermsOfSale")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("CompletedProjects");

                    b.HasDiscriminator<string>("ProjectType").HasValue("CompletedProject");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.Download", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Downloads");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.EnumKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EnumKeys");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.EnumValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("KeyId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("KeyId");

                    b.ToTable("EnumValues");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.Format", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Formats");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Header")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.NewsPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("NewsId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.ToTable("NewsPhotos");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.PlanOfApartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("double precision");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfWindows")
                        .HasColumnType("integer");

                    b.Property<bool>("Parking")
                        .HasColumnType("boolean");

                    b.Property<string>("PlanName")
                        .HasColumnType("text");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<bool>("Repaired")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("PlanOfApartments");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.ProjectPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("OngoingProjectId")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OngoingProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectPhotos");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.OngoingProject", b =>
                {
                    b.HasBaseType("KristalAbsheronAzAPI.Entities.CompletedProject");

                    b.HasDiscriminator().HasValue("OngoingProject");
                });

            modelBuilder.Entity("DownloadFormat", b =>
                {
                    b.HasOne("KristalAbsheronAzAPI.Entities.Download", null)
                        .WithMany()
                        .HasForeignKey("DownloadsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KristalAbsheronAzAPI.Entities.Format", null)
                        .WithMany()
                        .HasForeignKey("FormatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.CompletedProject", b =>
                {
                    b.HasOne("KristalAbsheronAzAPI.Entities.EnumValue", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.EnumValue", b =>
                {
                    b.HasOne("KristalAbsheronAzAPI.Entities.EnumKey", "Key")
                        .WithMany()
                        .HasForeignKey("KeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Key");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.NewsPhoto", b =>
                {
                    b.HasOne("KristalAbsheronAzAPI.Entities.News", "News")
                        .WithMany("Photos")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.PlanOfApartment", b =>
                {
                    b.HasOne("KristalAbsheronAzAPI.Entities.CompletedProject", "Project")
                        .WithMany("PlanOfApartments")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.ProjectPhoto", b =>
                {
                    b.HasOne("KristalAbsheronAzAPI.Entities.OngoingProject", null)
                        .WithMany("StatusOfConstruction")
                        .HasForeignKey("OngoingProjectId");

                    b.HasOne("KristalAbsheronAzAPI.Entities.CompletedProject", "Project")
                        .WithMany("PhotoGallery")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.CompletedProject", b =>
                {
                    b.Navigation("PhotoGallery");

                    b.Navigation("PlanOfApartments");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.News", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("KristalAbsheronAzAPI.Entities.OngoingProject", b =>
                {
                    b.Navigation("StatusOfConstruction");
                });
#pragma warning restore 612, 618
        }
    }
}
